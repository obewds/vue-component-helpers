import{_ as n,c as s,o as a,a as p}from"./app.5d8ea49a.js";const y='{"title":"@obewds/vue-component-helpers Component","description":"","frontmatter":{"head":[["link",{"rel":"icon","href":"favicon.ico"}]]},"headers":[{"level":2,"title":"ES Module Version","slug":"es-module-version"},{"level":2,"title":"UMD Version","slug":"umd-version"},{"level":2,"title":"CJS Version","slug":"cjs-version"},{"level":2,"title":"IIFE (Browser) Code","slug":"iife-browser-code"}],"relativePath":"component.md"}',t={},o=p(`<h1 id="obewds-vue-component-helpers-component" tabindex="-1">@obewds/vue-component-helpers Component <a class="header-anchor" href="#obewds-vue-component-helpers-component" aria-hidden="true">#</a></h1><h2 id="es-module-version" tabindex="-1">ES Module Version <a class="header-anchor" href="#es-module-version" aria-hidden="true">#</a></h2><p>ESM version</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> emptyElementTags<span class="token punctuation">,</span> unsupportedElementTags <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@obewds/vue-validators&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> merge <span class="token keyword">from</span> <span class="token string">&quot;deepmerge&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ObewdsTwConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@obewds/obewds-tw-config&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">extractValidPalettes</span><span class="token punctuation">(</span><span class="token parameter">tw<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> output <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>tw <span class="token operator">&amp;&amp;</span> tw<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> tw<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>palettes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    output <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>tw<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> key2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> output<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">getBgPaletteColor</span><span class="token punctuation">(</span><span class="token parameter">config<span class="token punctuation">,</span> palette<span class="token punctuation">,</span> color</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> _a<span class="token punctuation">,</span> _b<span class="token punctuation">,</span> _c<span class="token punctuation">,</span> _d<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>config <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>_d <span class="token operator">=</span> <span class="token punctuation">(</span>_c <span class="token operator">=</span> <span class="token punctuation">(</span>_b <span class="token operator">=</span> <span class="token punctuation">(</span>_a <span class="token operator">=</span> config <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> config<span class="token punctuation">.</span>bg<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _a<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _b<span class="token punctuation">[</span>palette<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _c<span class="token punctuation">.</span>colors<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _d<span class="token punctuation">[</span>color<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> config<span class="token punctuation">.</span>bg<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>palette<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>color<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">getBorderPaletteColor</span><span class="token punctuation">(</span><span class="token parameter">config<span class="token punctuation">,</span> palette<span class="token punctuation">,</span> color</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> _a<span class="token punctuation">,</span> _b<span class="token punctuation">,</span> _c<span class="token punctuation">,</span> _d<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>config <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>_d <span class="token operator">=</span> <span class="token punctuation">(</span>_c <span class="token operator">=</span> <span class="token punctuation">(</span>_b <span class="token operator">=</span> <span class="token punctuation">(</span>_a <span class="token operator">=</span> config <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> config<span class="token punctuation">.</span>border<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _a<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _b<span class="token punctuation">[</span>palette<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _c<span class="token punctuation">.</span>colors<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _d<span class="token punctuation">[</span>color<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> config<span class="token punctuation">.</span>border<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>palette<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>color<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">getTextPaletteColor</span><span class="token punctuation">(</span><span class="token parameter">config<span class="token punctuation">,</span> palette<span class="token punctuation">,</span> color</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> _a<span class="token punctuation">,</span> _b<span class="token punctuation">,</span> _c<span class="token punctuation">,</span> _d<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>config <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>_d <span class="token operator">=</span> <span class="token punctuation">(</span>_c <span class="token operator">=</span> <span class="token punctuation">(</span>_b <span class="token operator">=</span> <span class="token punctuation">(</span>_a <span class="token operator">=</span> config <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> config<span class="token punctuation">.</span>text<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _a<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _b<span class="token punctuation">[</span>palette<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _c<span class="token punctuation">.</span>colors<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _d<span class="token punctuation">[</span>color<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> config<span class="token punctuation">.</span>text<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>palette<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>color<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">isEmptyElement</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> t <span class="token operator">=</span> tag<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> isEmptyElement2 <span class="token operator">=</span> emptyElementTags<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isEmptyElement2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;The &lt;&quot;</span> <span class="token operator">+</span> tag <span class="token operator">+</span> <span class="token string">&quot;&gt; tag is an Empty Element. Since Empty Elements do not have child node capabilities, they are not available as tags for this component.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">isEmptyOrUnsupportedElement</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> t <span class="token operator">=</span> tag<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> isTagEmpty <span class="token operator">=</span> <span class="token function">isEmptyElement</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> isTagUnsupported <span class="token operator">=</span> <span class="token function">isUnsupportedElement</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> isTagEmpty <span class="token operator">||</span> isTagUnsupported <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">isUnsupportedElement</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> t <span class="token operator">=</span> tag<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> isUnsupportedElement2 <span class="token operator">=</span> unsupportedElementTags<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isUnsupportedElement2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;The &lt;&quot;</span> <span class="token operator">+</span> tag <span class="token operator">+</span> <span class="token string">&quot;&gt; element tag is not supported for rendering by this component.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">mergeAppConfigWithDefaults</span><span class="token punctuation">(</span><span class="token parameter">appTwConfig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>appTwConfig<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token function">merge</span><span class="token punctuation">(</span>ObewdsTwConfig<span class="token punctuation">,</span> appTwConfig<span class="token punctuation">)</span> <span class="token operator">:</span> ObewdsTwConfig<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">validPaletteProps</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> twConfig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> tw <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>twConfig<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> twConfig <span class="token operator">:</span> ObewdsTwConfig<span class="token punctuation">;</span>
  <span class="token keyword">let</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>tw <span class="token operator">&amp;&amp;</span> tw<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> tw<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>palettes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    array <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>tw<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> key2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> extractValidPalettes<span class="token punctuation">,</span> getBgPaletteColor<span class="token punctuation">,</span> getBorderPaletteColor<span class="token punctuation">,</span> getTextPaletteColor<span class="token punctuation">,</span> isEmptyElement<span class="token punctuation">,</span> isEmptyOrUnsupportedElement<span class="token punctuation">,</span> isUnsupportedElement<span class="token punctuation">,</span> mergeAppConfigWithDefaults<span class="token punctuation">,</span> validPaletteProps <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br></div></div><h2 id="umd-version" tabindex="-1">UMD Version <a class="header-anchor" href="#umd-version" aria-hidden="true">#</a></h2><p>Version used by Node.js (Universal version for Common.js/AMD)</p><div class="language-js line-numbers-mode"><pre><code><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span>a</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">typeof</span> exports<span class="token operator">==</span><span class="token string">&quot;object&quot;</span><span class="token operator">&amp;&amp;</span><span class="token keyword">typeof</span> module<span class="token operator">!=</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">?</span><span class="token function">a</span><span class="token punctuation">(</span>exports<span class="token punctuation">,</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@obewds/vue-validators&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;deepmerge&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@obewds/obewds-tw-config&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">typeof</span> define<span class="token operator">==</span><span class="token string">&quot;function&quot;</span><span class="token operator">&amp;&amp;</span>define<span class="token punctuation">.</span>amd<span class="token operator">?</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;exports&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;@obewds/vue-validators&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;deepmerge&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;@obewds/obewds-tw-config&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">(</span>s<span class="token operator">=</span><span class="token keyword">typeof</span> globalThis<span class="token operator">!=</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">?</span>globalThis<span class="token operator">:</span>s<span class="token operator">||</span>self<span class="token punctuation">,</span><span class="token function">a</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>VueComponentHelpers<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>s<span class="token punctuation">.</span>VueValidators<span class="token punctuation">,</span>s<span class="token punctuation">.</span>deepmerge<span class="token punctuation">,</span>s<span class="token punctuation">.</span>ObewdsTwConfig<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span>a<span class="token punctuation">,</span>m<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> e<span class="token operator">&amp;&amp;</span><span class="token keyword">typeof</span> e<span class="token operator">==</span><span class="token string">&quot;object&quot;</span><span class="token operator">&amp;&amp;</span><span class="token string">&quot;default&quot;</span><span class="token keyword">in</span> e<span class="token operator">?</span>e<span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span>e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">var</span> c<span class="token operator">=</span><span class="token function">f</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token constant">E</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> r<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">return</span> e<span class="token operator">&amp;&amp;</span>e<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span>e<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>palettes<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>r<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>e<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token operator">=&gt;</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>t<span class="token punctuation">,</span>r</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> n<span class="token punctuation">,</span>l<span class="token punctuation">,</span>o<span class="token punctuation">,</span>u<span class="token punctuation">;</span><span class="token keyword">return</span> e<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u<span class="token operator">=</span><span class="token punctuation">(</span>o<span class="token operator">=</span><span class="token punctuation">(</span>l<span class="token operator">=</span><span class="token punctuation">(</span>n<span class="token operator">=</span>e<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>e<span class="token punctuation">.</span>bg<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>n<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>l<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>o<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>u<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span>e<span class="token punctuation">.</span>bg<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">y</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>t<span class="token punctuation">,</span>r</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> n<span class="token punctuation">,</span>l<span class="token punctuation">,</span>o<span class="token punctuation">,</span>u<span class="token punctuation">;</span><span class="token keyword">return</span> e<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u<span class="token operator">=</span><span class="token punctuation">(</span>o<span class="token operator">=</span><span class="token punctuation">(</span>l<span class="token operator">=</span><span class="token punctuation">(</span>n<span class="token operator">=</span>e<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>e<span class="token punctuation">.</span>border<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>n<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>l<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>o<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>u<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span>e<span class="token punctuation">.</span>border<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>t<span class="token punctuation">,</span>r</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> n<span class="token punctuation">,</span>l<span class="token punctuation">,</span>o<span class="token punctuation">,</span>u<span class="token punctuation">;</span><span class="token keyword">return</span> e<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u<span class="token operator">=</span><span class="token punctuation">(</span>o<span class="token operator">=</span><span class="token punctuation">(</span>l<span class="token operator">=</span><span class="token punctuation">(</span>n<span class="token operator">=</span>e<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>e<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>n<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>l<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>o<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>u<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span>e<span class="token punctuation">.</span>text<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">d</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> t<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> a<span class="token punctuation">.</span>emptyElementTags<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;The &lt;&quot;</span><span class="token operator">+</span>e<span class="token operator">+</span><span class="token string">&quot;&gt; tag is an Empty Element. Since Empty Elements do not have child node capabilities, they are not available as tags for this component.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token constant">P</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> t<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token operator">=</span><span class="token function">d</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token operator">=</span><span class="token function">p</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span>r<span class="token operator">||</span>n<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">p</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> t<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> a<span class="token punctuation">.</span>unsupportedElementTags<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;The &lt;&quot;</span><span class="token operator">+</span>e<span class="token operator">+</span><span class="token string">&quot;&gt; element tag is not supported for rendering by this component.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token constant">C</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">?</span>c<span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>ObewdsTwConfig<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token operator">:</span>i<span class="token punctuation">.</span>ObewdsTwConfig<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token constant">T</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> r<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">?</span>t<span class="token operator">:</span>i<span class="token punctuation">.</span>ObewdsTwConfig<span class="token punctuation">,</span>n<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">return</span> r<span class="token operator">&amp;&amp;</span>r<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span>r<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>palettes<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>n<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">l</span><span class="token operator">=&gt;</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">}</span>s<span class="token punctuation">.</span>extractValidPalettes<span class="token operator">=</span><span class="token constant">E</span><span class="token punctuation">,</span>s<span class="token punctuation">.</span>getBgPaletteColor<span class="token operator">=</span>b<span class="token punctuation">,</span>s<span class="token punctuation">.</span>getBorderPaletteColor<span class="token operator">=</span>y<span class="token punctuation">,</span>s<span class="token punctuation">.</span>getTextPaletteColor<span class="token operator">=</span>h<span class="token punctuation">,</span>s<span class="token punctuation">.</span>isEmptyElement<span class="token operator">=</span>d<span class="token punctuation">,</span>s<span class="token punctuation">.</span>isEmptyOrUnsupportedElement<span class="token operator">=</span><span class="token constant">P</span><span class="token punctuation">,</span>s<span class="token punctuation">.</span>isUnsupportedElement<span class="token operator">=</span>p<span class="token punctuation">,</span>s<span class="token punctuation">.</span>mergeAppConfigWithDefaults<span class="token operator">=</span><span class="token constant">C</span><span class="token punctuation">,</span>s<span class="token punctuation">.</span>validPaletteProps<span class="token operator">=</span><span class="token constant">T</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">__esModule</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>toStringTag<span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token string">&quot;Module&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="cjs-version" tabindex="-1">CJS Version <a class="header-anchor" href="#cjs-version" aria-hidden="true">#</a></h2><p>CommonJS version</p><div class="language-js line-numbers-mode"><pre><code><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>exports<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">__esModule</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>toStringTag<span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token string">&quot;Module&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> u<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@obewds/vue-validators&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>d<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;deepmerge&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@obewds/obewds-tw-config&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">m</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> e<span class="token operator">&amp;&amp;</span><span class="token keyword">typeof</span> e<span class="token operator">==</span><span class="token string">&quot;object&quot;</span><span class="token operator">&amp;&amp;</span><span class="token string">&quot;default&quot;</span><span class="token keyword">in</span> e<span class="token operator">?</span>e<span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span>e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">var</span> <span class="token constant">E</span><span class="token operator">=</span><span class="token function">m</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">c</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> r<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">return</span> e<span class="token operator">&amp;&amp;</span>e<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span>e<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>palettes<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>r<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>e<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token operator">=&gt;</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>t<span class="token punctuation">,</span>r</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> s<span class="token punctuation">,</span>l<span class="token punctuation">,</span>o<span class="token punctuation">,</span>n<span class="token punctuation">;</span><span class="token keyword">return</span> e<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token punctuation">(</span>o<span class="token operator">=</span><span class="token punctuation">(</span>l<span class="token operator">=</span><span class="token punctuation">(</span>s<span class="token operator">=</span>e<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>e<span class="token punctuation">.</span>bg<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>s<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>l<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>o<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>n<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span>e<span class="token punctuation">.</span>bg<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>t<span class="token punctuation">,</span>r</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> s<span class="token punctuation">,</span>l<span class="token punctuation">,</span>o<span class="token punctuation">,</span>n<span class="token punctuation">;</span><span class="token keyword">return</span> e<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token punctuation">(</span>o<span class="token operator">=</span><span class="token punctuation">(</span>l<span class="token operator">=</span><span class="token punctuation">(</span>s<span class="token operator">=</span>e<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>e<span class="token punctuation">.</span>border<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>s<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>l<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>o<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>n<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span>e<span class="token punctuation">.</span>border<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">y</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>t<span class="token punctuation">,</span>r</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> s<span class="token punctuation">,</span>l<span class="token punctuation">,</span>o<span class="token punctuation">,</span>n<span class="token punctuation">;</span><span class="token keyword">return</span> e<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token punctuation">(</span>o<span class="token operator">=</span><span class="token punctuation">(</span>l<span class="token operator">=</span><span class="token punctuation">(</span>s<span class="token operator">=</span>e<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>e<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>s<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>l<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>o<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>n<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span>e<span class="token punctuation">.</span>text<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">p</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> t<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> u<span class="token punctuation">.</span>emptyElementTags<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;The &lt;&quot;</span><span class="token operator">+</span>e<span class="token operator">+</span><span class="token string">&quot;&gt; tag is an Empty Element. Since Empty Elements do not have child node capabilities, they are not available as tags for this component.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> t<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token operator">=</span><span class="token function">p</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token function">i</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span>r<span class="token operator">||</span>s<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">i</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> t<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> u<span class="token punctuation">.</span>unsupportedElementTags<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;The &lt;&quot;</span><span class="token operator">+</span>e<span class="token operator">+</span><span class="token string">&quot;&gt; element tag is not supported for rendering by this component.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">v</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token constant">E</span><span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>ObewdsTwConfig<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token operator">:</span>a<span class="token punctuation">.</span>ObewdsTwConfig<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token constant">C</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> r<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">?</span>t<span class="token operator">:</span>a<span class="token punctuation">.</span>ObewdsTwConfig<span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">return</span> r<span class="token operator">&amp;&amp;</span>r<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span>r<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>palettes<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>s<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">l</span><span class="token operator">=&gt;</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token punctuation">}</span>exports<span class="token punctuation">.</span>extractValidPalettes<span class="token operator">=</span>c<span class="token punctuation">;</span>exports<span class="token punctuation">.</span>getBgPaletteColor<span class="token operator">=</span>b<span class="token punctuation">;</span>exports<span class="token punctuation">.</span>getBorderPaletteColor<span class="token operator">=</span>f<span class="token punctuation">;</span>exports<span class="token punctuation">.</span>getTextPaletteColor<span class="token operator">=</span>y<span class="token punctuation">;</span>exports<span class="token punctuation">.</span>isEmptyElement<span class="token operator">=</span>p<span class="token punctuation">;</span>exports<span class="token punctuation">.</span>isEmptyOrUnsupportedElement<span class="token operator">=</span>g<span class="token punctuation">;</span>exports<span class="token punctuation">.</span>isUnsupportedElement<span class="token operator">=</span>i<span class="token punctuation">;</span>exports<span class="token punctuation">.</span>mergeAppConfigWithDefaults<span class="token operator">=</span>v<span class="token punctuation">;</span>exports<span class="token punctuation">.</span>validPaletteProps<span class="token operator">=</span><span class="token constant">C</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="iife-browser-code" tabindex="-1">IIFE (Browser) Code <a class="header-anchor" href="#iife-browser-code" aria-hidden="true">#</a></h2><p>Version used for browser instances</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">var</span> <span class="token function-variable function">VueComponentHelpers</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span>p<span class="token punctuation">,</span>d<span class="token punctuation">,</span>o</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token constant">E</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> e<span class="token operator">&amp;&amp;</span><span class="token keyword">typeof</span> e<span class="token operator">==</span><span class="token string">&quot;object&quot;</span><span class="token operator">&amp;&amp;</span><span class="token string">&quot;default&quot;</span><span class="token keyword">in</span> e<span class="token operator">?</span>e<span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span>e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">var</span> c<span class="token operator">=</span><span class="token constant">E</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> r<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">return</span> e<span class="token operator">&amp;&amp;</span>e<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span>e<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>palettes<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>r<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>e<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">l</span><span class="token operator">=&gt;</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>t<span class="token punctuation">,</span>r</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> l<span class="token punctuation">,</span>s<span class="token punctuation">,</span>a<span class="token punctuation">,</span>u<span class="token punctuation">;</span><span class="token keyword">return</span> e<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u<span class="token operator">=</span><span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token punctuation">(</span>s<span class="token operator">=</span><span class="token punctuation">(</span>l<span class="token operator">=</span>e<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>e<span class="token punctuation">.</span>bg<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>l<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>s<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>a<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>u<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span>e<span class="token punctuation">.</span>bg<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">y</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>t<span class="token punctuation">,</span>r</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> l<span class="token punctuation">,</span>s<span class="token punctuation">,</span>a<span class="token punctuation">,</span>u<span class="token punctuation">;</span><span class="token keyword">return</span> e<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u<span class="token operator">=</span><span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token punctuation">(</span>s<span class="token operator">=</span><span class="token punctuation">(</span>l<span class="token operator">=</span>e<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>e<span class="token punctuation">.</span>border<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>l<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>s<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>a<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>u<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span>e<span class="token punctuation">.</span>border<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token constant">P</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>t<span class="token punctuation">,</span>r</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> l<span class="token punctuation">,</span>s<span class="token punctuation">,</span>a<span class="token punctuation">,</span>u<span class="token punctuation">;</span><span class="token keyword">return</span> e<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u<span class="token operator">=</span><span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token punctuation">(</span>s<span class="token operator">=</span><span class="token punctuation">(</span>l<span class="token operator">=</span>e<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>e<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>l<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>s<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>a<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>u<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span>e<span class="token punctuation">.</span>text<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">i</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> t<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> p<span class="token punctuation">.</span>emptyElementTags<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;The &lt;&quot;</span><span class="token operator">+</span>e<span class="token operator">+</span><span class="token string">&quot;&gt; tag is an Empty Element. Since Empty Elements do not have child node capabilities, they are not available as tags for this component.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token constant">C</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> t<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token operator">=</span><span class="token function">i</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>l<span class="token operator">=</span><span class="token function">m</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span>r<span class="token operator">||</span>l<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">m</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> t<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> p<span class="token punctuation">.</span>unsupportedElementTags<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;The &lt;&quot;</span><span class="token operator">+</span>e<span class="token operator">+</span><span class="token string">&quot;&gt; element tag is not supported for rendering by this component.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">?</span>c<span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>ObewdsTwConfig<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token operator">:</span>o<span class="token punctuation">.</span>ObewdsTwConfig<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token constant">O</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">let</span> r<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">?</span>t<span class="token operator">:</span>o<span class="token punctuation">.</span>ObewdsTwConfig<span class="token punctuation">,</span>l<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">return</span> r<span class="token operator">&amp;&amp;</span>r<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span>r<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>palettes<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>l<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token operator">=&gt;</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>l<span class="token punctuation">}</span><span class="token keyword">return</span> n<span class="token punctuation">.</span>extractValidPalettes<span class="token operator">=</span>b<span class="token punctuation">,</span>n<span class="token punctuation">.</span>getBgPaletteColor<span class="token operator">=</span>f<span class="token punctuation">,</span>n<span class="token punctuation">.</span>getBorderPaletteColor<span class="token operator">=</span>y<span class="token punctuation">,</span>n<span class="token punctuation">.</span>getTextPaletteColor<span class="token operator">=</span><span class="token constant">P</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span>isEmptyElement<span class="token operator">=</span>i<span class="token punctuation">,</span>n<span class="token punctuation">.</span>isEmptyOrUnsupportedElement<span class="token operator">=</span><span class="token constant">C</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span>isUnsupportedElement<span class="token operator">=</span>m<span class="token punctuation">,</span>n<span class="token punctuation">.</span>mergeAppConfigWithDefaults<span class="token operator">=</span>h<span class="token punctuation">,</span>n<span class="token punctuation">.</span>validPaletteProps<span class="token operator">=</span><span class="token constant">O</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">__esModule</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>toStringTag<span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token string">&quot;Module&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>VueValidators<span class="token punctuation">,</span>deepmerge<span class="token punctuation">,</span>ObewdsTwConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div>`,13),e=[o];function c(u,l,k,r,i,d){return a(),s("div",null,e)}var w=n(t,[["render",c]]);export{y as __pageData,w as default};
